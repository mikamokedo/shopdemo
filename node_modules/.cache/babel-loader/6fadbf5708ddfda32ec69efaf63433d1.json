{"ast":null,"code":"import firebase from '../firebaseConfig';\nexport const getMethod = () => {\n  let xhtml = firebase.firestore().collection(\"listproduct\").get().then(querySnapshot => {\n    return querySnapshot;\n  }).catch(erro => {\n    return erro;\n  });\n  return xhtml;\n};\nexport const getSingleMethod = id => {\n  let xhtml = firebase.firestore().collection(\"listproduct\").doc(id).get().then(querySnapshot => {\n    return querySnapshot.data();\n  }).catch(erro => {\n    return erro;\n  });\n  return xhtml;\n};\nexport const fillterbycate = cate => {\n  let listProducts = [];\n  let json = firebase.firestore().collection(\"listproduct\").where(\"cate\", \"==\", cate).get().then(function (querySnapshot) {\n    querySnapshot.forEach(function (doc) {\n      listProducts.push(doc.data());\n    });\n    return listProducts;\n  });\n  return json;\n};\nexport const uploadImgFirebase = file => {\n  const storage = firebase.storage();\n  const uploadTask = storage.ref(`/shopimage/${file.name}`).put(file);\n  uploadTask.on('state_changed', snapshot => {}, error => {\n    console.log(error);\n  }, success => {\n    uploadTask.snapshot.ref.getDownloadURL().then(url => {\n      return url;\n    });\n  });\n};","map":{"version":3,"sources":["D:/Qqqq/shopdemo/src/api/index.js"],"names":["firebase","getMethod","xhtml","firestore","collection","get","then","querySnapshot","catch","erro","getSingleMethod","id","doc","data","fillterbycate","cate","listProducts","json","where","forEach","push","uploadImgFirebase","file","storage","uploadTask","ref","name","put","on","snapshot","error","console","log","success","getDownloadURL","url"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,OAAO,MAAOC,SAAS,GAAG,MAAK;AAC9B,MAAIC,KAAK,GAAGF,QAAQ,CAACG,SAAT,GAAqBC,UAArB,CAAgC,aAAhC,EAA+CC,GAA/C,GACTC,IADS,CACHC,aAAD,IAAmB;AAEpB,WAAOA,aAAP;AAEL,GALU,EAKRC,KALQ,CAKDC,IAAD,IAAS;AAEhB,WAAOA,IAAP;AACD,GARU,CAAZ;AAUC,SAAOP,KAAP;AAED,CAbM;AAeP,OAAO,MAAMQ,eAAe,GAAIC,EAAD,IAAO;AACpC,MAAIT,KAAK,GAAIF,QAAQ,CAACG,SAAT,GAAqBC,UAArB,CAAgC,aAAhC,EAA+CQ,GAA/C,CAAmDD,EAAnD,EAAuDN,GAAvD,GACZC,IADY,CACNC,aAAD,IAAmB;AACtB,WAAOA,aAAa,CAACM,IAAd,EAAP;AAEH,GAJa,EAIXL,KAJW,CAIJC,IAAD,IAAS;AAEd,WAAOA,IAAP;AACH,GAPa,CAAb;AAQC,SAAOP,KAAP;AAED,CAXK;AAcN,OAAO,MAAMY,aAAa,GAAIC,IAAD,IAAS;AACrC,MAAIC,YAAY,GAAG,EAAnB;AACC,MAAIC,IAAI,GAAGjB,QAAQ,CAACG,SAAT,GAAqBC,UAArB,CAAgC,aAAhC,EAA+Cc,KAA/C,CAAqD,MAArD,EAA6D,IAA7D,EAAmEH,IAAnE,EAAyEV,GAAzE,GAA+EC,IAA/E,CAAoF,UAASC,aAAT,EAAwB;AACnHA,IAAAA,aAAa,CAACY,OAAd,CAAsB,UAASP,GAAT,EAAc;AACnCI,MAAAA,YAAY,CAACI,IAAb,CAAkBR,GAAG,CAACC,IAAJ,EAAlB;AACA,KAFD;AAGA,WAAOG,YAAP;AACH,GALU,CAAX;AAMA,SAAOC,IAAP;AAEF,CAVO;AAWR,OAAO,MAAMI,iBAAiB,GAAIC,IAAD,IAAS;AACxC,QAAMC,OAAO,GAAGvB,QAAQ,CAACuB,OAAT,EAAhB;AACA,QAAMC,UAAU,GAAID,OAAO,CAACE,GAAR,CAAa,cAAaH,IAAI,CAACI,IAAK,EAApC,EAAuCC,GAAvC,CAA2CL,IAA3C,CAApB;AACAE,EAAAA,UAAU,CAACI,EAAX,CAAc,eAAd,EAA+BC,QAAD,IAAc,CAE3C,CAFD,EAEIC,KAAD,IAAW;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAJD,EAIIG,OAAD,IAAa;AACdT,IAAAA,UAAU,CAACK,QAAX,CAAoBJ,GAApB,CAAwBS,cAAxB,GAAyC5B,IAAzC,CAA+C6B,GAAD,IAAS;AACrD,aAAOA,GAAP;AACD,KAFD;AAKD,GAVD;AAYD,CAfM","sourcesContent":["import firebase from '../firebaseConfig';\r\nexport const  getMethod = () =>{\r\n let xhtml = firebase.firestore().collection(\"listproduct\").get().\r\n    then((querySnapshot) => {\r\n        \r\n        return querySnapshot;\r\n   \r\n  }).catch((erro) =>{\r\n\r\n    return erro;\r\n  })\r\n\r\n  return xhtml;\r\n\r\n}\r\n\r\nexport const getSingleMethod = (id) =>{\r\n  let xhtml =  firebase.firestore().collection(\"listproduct\").doc(id).get().\r\n   then((querySnapshot) => {\r\n     return querySnapshot.data();\r\n  \r\n }).catch((erro) =>{\r\n \r\n     return erro;\r\n })\r\n   return xhtml;\r\n \r\n };\r\n\r\n\r\n export const fillterbycate = (cate) =>{\r\n  let listProducts = [];\r\n   let json = firebase.firestore().collection(\"listproduct\").where(\"cate\", \"==\", cate).get().then(function(querySnapshot) {\r\n       querySnapshot.forEach(function(doc) {\r\n        listProducts.push(doc.data());  \r\n       });\r\n       return listProducts;\r\n   })\r\n   return json;\r\n\r\n}\r\nexport const uploadImgFirebase = (file) =>{\r\n  const storage = firebase.storage();\r\n  const uploadTask =  storage.ref(`/shopimage/${file.name}`).put(file);\r\n  uploadTask.on('state_changed',(snapshot) => {\r\n\r\n  }, (error) => {\r\n    console.log(error);\r\n  }, (success) => {\r\n    uploadTask.snapshot.ref.getDownloadURL().then((url) => {\r\n      return url;\r\n    });\r\n\r\n\r\n  });\r\n\r\n}"]},"metadata":{},"sourceType":"module"}