{"ast":null,"code":"import _objectSpread from \"D:\\\\Reacjs\\\\shopdemo\\\\shopdemo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeEvery, put, call } from 'redux-saga/effects';\nimport { change_loading_status, change_loading_status_false } from '../action/loading';\nimport { feetListProductsSuccess, feetSingleProductSuccess } from '../action/products';\nimport { getMethod, getSingleMethod } from '../api/index';\nimport * as CONSTANT from '../constant/index';\n\nfunction* getListProductsFromFirebase() {\n  yield put(change_loading_status());\n  let data = yield call(getMethod);\n  let listProducts = [];\n  data.forEach(element => {\n    let temp = element.data();\n    temp = _objectSpread({}, temp, {\n      id: element.id\n    });\n    listProducts.push(temp);\n  });\n  yield put(feetListProductsSuccess(listProducts));\n  yield put(change_loading_status_false());\n}\n\nfunction* getSingProductsFromFirebase(id) {\n  yield put(change_loading_status());\n  let idSingleProduct = id.payload.id;\n  let item = yield call(getSingleMethod, idSingleProduct);\n  console.log(item); // yield put(feetSingleProductSuccess(item));\n  // yield put(change_loading_status_false());\n}\n\nfunction* rootSaga() {\n  yield takeEvery(CONSTANT.FEET_LIST_PRODUCTS, getListProductsFromFirebase);\n  yield takeEvery(CONSTANT.FEET_SINGLE_PRODUCTS, getSingProductsFromFirebase);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["D:/Reacjs/shopdemo/shopdemo/src/reduxSaga/index.js"],"names":["takeEvery","put","call","change_loading_status","change_loading_status_false","feetListProductsSuccess","feetSingleProductSuccess","getMethod","getSingleMethod","CONSTANT","getListProductsFromFirebase","data","listProducts","forEach","element","temp","id","push","getSingProductsFromFirebase","idSingleProduct","payload","item","console","log","rootSaga","FEET_LIST_PRODUCTS","FEET_SINGLE_PRODUCTS"],"mappings":";AAAA,SAAQA,SAAR,EAAkBC,GAAlB,EAAsBC,IAAtB,QAAiC,oBAAjC;AACA,SAAQC,qBAAR,EAA8BC,2BAA9B,QAAgE,mBAAhE;AACA,SAAQC,uBAAR,EAAgCC,wBAAhC,QAA+D,oBAA/D;AACA,SAAQC,SAAR,EAAkBC,eAAlB,QAAwC,cAAxC;AACA,OAAO,KAAKC,QAAZ,MAA0B,mBAA1B;;AAEA,UAAUC,2BAAV,GAAuC;AACnC,QAAMT,GAAG,CAACE,qBAAqB,EAAtB,CAAT;AACA,MAAIQ,IAAI,GAAG,MAAMT,IAAI,CAACK,SAAD,CAArB;AACA,MAAIK,YAAY,GAAG,EAAnB;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAaC,OAAO,IAAI;AACpB,QAAIC,IAAI,GAAID,OAAO,CAACH,IAAR,EAAZ;AACCI,IAAAA,IAAI,qBAASA,IAAT;AAAcC,MAAAA,EAAE,EAACF,OAAO,CAACE;AAAzB,MAAJ;AACDJ,IAAAA,YAAY,CAACK,IAAb,CAAkBF,IAAlB;AACA,GAJJ;AAKG,QAAMd,GAAG,CAACI,uBAAuB,CAACO,YAAD,CAAxB,CAAT;AACA,QAAMX,GAAG,CAACG,2BAA2B,EAA5B,CAAT;AAEN;;AAED,UAAUc,2BAAV,CAAsCF,EAAtC,EAAyC;AAErC,QAAMf,GAAG,CAACE,qBAAqB,EAAtB,CAAT;AACA,MAAIgB,eAAe,GAAGH,EAAE,CAACI,OAAH,CAAWJ,EAAjC;AACA,MAAIK,IAAI,GAAG,MAAMnB,IAAI,CAACM,eAAD,EAAiBW,eAAjB,CAArB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EALqC,CAMrC;AACA;AACH;;AAQD,UAAWG,QAAX,GAAsB;AAClB,QAAMxB,SAAS,CAACS,QAAQ,CAACgB,kBAAV,EAA6Bf,2BAA7B,CAAf;AACA,QAAMV,SAAS,CAACS,QAAQ,CAACiB,oBAAV,EAA+BR,2BAA/B,CAAf;AACH;;AAED,eAAeM,QAAf","sourcesContent":["import {takeEvery,put,call} from 'redux-saga/effects';\r\nimport {change_loading_status,change_loading_status_false} from '../action/loading';\r\nimport {feetListProductsSuccess,feetSingleProductSuccess} from '../action/products';\r\nimport {getMethod,getSingleMethod} from '../api/index';\r\nimport * as CONSTANT from '../constant/index';\r\n\r\nfunction* getListProductsFromFirebase(){\r\n    yield put(change_loading_status());\r\n    let data = yield call(getMethod);\r\n    let listProducts = [];\r\n    data.forEach(element => {\r\n        let temp  = element.data();\r\n         temp =   {...temp,id:element.id}\r\n        listProducts.push(temp);\r\n       });\r\n       yield put(feetListProductsSuccess(listProducts));\r\n       yield put(change_loading_status_false());\r\n\r\n}\r\n\r\nfunction* getSingProductsFromFirebase(id){\r\n\r\n    yield put(change_loading_status());\r\n    let idSingleProduct = id.payload.id;\r\n    let item = yield call(getSingleMethod,idSingleProduct);\r\n    console.log(item);\r\n    // yield put(feetSingleProductSuccess(item));\r\n    // yield put(change_loading_status_false());\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction * rootSaga (){\r\n    yield takeEvery(CONSTANT.FEET_LIST_PRODUCTS,getListProductsFromFirebase)\r\n    yield takeEvery(CONSTANT.FEET_SINGLE_PRODUCTS,getSingProductsFromFirebase)\r\n}\r\n\r\nexport default rootSaga;"]},"metadata":{},"sourceType":"module"}